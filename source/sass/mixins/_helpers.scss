@use "sass:list";

// Hides an element from the viewport and remove it from the workflow
@mixin visually-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  white-space: nowrap;
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
}

// Resets default browser styles for <ul> and <ol> lists
@mixin list-reset() {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 0;
  list-style: none;
}

/// Truncates contents of a block to the specified number of lines and adds an ellipsis to represent clipped text.
///
/// @param {number} $number - a number of lines after which the content will be clamped
/// @output a block of styles for truncating the content
@mixin line-clamp($number) {
  display: -webkit-box; // stylelint-disable-line value-no-vendor-prefix
  overflow: hidden;
  -webkit-line-clamp: $number;
  -webkit-box-orient: vertical; // stylelint-disable-line property-no-vendor-prefix
}

/// Outputs a set of styles for setting a background image in modern format (WebP, AVIF) with a fallback for older browsers.
///
/// @param {string | list} $images - an image filename, an url() resource, a gradient or a list of them for multiple backgrounds
/// @param {string | list} $extensions [webp] - a modern image format extension or a list of extensions
/// @output a set of styles for setting a background image in modern format with a fallback
///
/// @example scss - setting a background in WebP (default) to .foo
///   .foo {
///     @include background-modern("image.jpg");
///   }
///
/// @example scss - setting two backgrounds in WebP and AVIF to .foo
///   .foo {
///     @include background-modern(url("../img/image1.jpg") url("../img/image2.jpg"), webp avif);
///   }
@mixin background-modern($images, $extensions: webp) {
  // stylelint-disable order/order
  $background-normal: ();
  $selector: ".no-js &";
  $formats: jpg jpeg png;

  @each $image in $images {
    $background-normal: list.append($background-normal, to-url($image), comma);
  }

  @each $extension in $extensions {
    $selector: list.append($selector, ".no-#{$extension} &", comma);
  }

  #{$selector} {
    background-image: $background-normal;
  }

  @each $extension in $extensions {
    $background-modern: ();

    @each $image in $background-normal {
      @each $format in $formats {
        $image: replace($image, $format, $extension);
      }

      $background-modern: list.append($background-modern, $image, comma); // stylelint-disable-line
    }

    .#{$extension} & {
      background-image: $background-modern;
    }
  }
  // stylelint-enable order/order
}
